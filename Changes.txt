2.2.0.0 -> 2.3.0.0
 -- fixed typo in config file ("BlockIds" -> "Block IDs")
    ** YOU NEED TO CHANGE THIS MANUALLY BEFORE RUNNING THIS UPDATE
       ## if you do not, the block IDs will reset to the default ones
       ## in your config file, look for the line that says this -->      BlockIds {
       ## change it to this -->      "Block IDs" {
    ** (sorry for the inconvenience, but I am way too anal-retentive to leave that wrong now that I noticed it)
 -- fixed bug with multipart blocks disappearing due to a change in Forge
    ** all version combinations of multipart/forge should work now
       ## subpart tick scheduling still isn't handled correctly though
 -- fixed bug with rendering template ghosts that span more than one chunk
 -- eliminated the caching of world objects for loaded translocators
 -- improved in-transit rendering of translucent things like liquids
 -- removed legacy conversion of item forms of decorated carriage blocks and labelled translocators
 -- redid the packet code to use tag compounds
 -- added slightly more redundancy to rendering code

2.1.0.2 -> 2.2.0.0
 -- names of platform and support carriages are now swapped to make them more intuitive
    ** blue carriage that carries everything everywhere has been renamed to 'support' (from 'platform')
    ** green carriage that carries everything in the direction it's pointing has been renamed to 'platform' (from 'support')
    ** this is cosmetic only and will not affect actual blocks/items in any way
       ## the only actual change is the name displayed in the tooltip
       ## internally (where most users will never see it without something like Waila) the names are the same as before
 -- entities (players, animals, minecarts, loose items, etc.) are now translocated along with carriages
    ** 95% of the time, it works flawlessly -- even things that are mounted on each other (like a player on a saddled pig) stay mounted
    ** should work for all custom dimensions too (Twilight Forest, Mystcraft, Dimensional Doors (maybe?), etc.), anything that registers itself as a full dimension with Minecraft itself
    ** small issues persist:
       ## if a minecart is on a rail on a carriage, when the carriage is converted to placeholder blocks, the rails cease to exist temporarily, so the minecart pops off the rails, and if someone was in the minecart, that will pop them out of the minecart too
          %% not too big of a deal: just get back in the minecart on the other end
       ## a minecart with a chest in it will drop its items on the ground when being translocated; the chest cart on the other end will seem to have the items in its inventory still, but they're just nonexistent client-side ghosts (not a dupe bug)
 -- template carriages can now be re-patterned without breaking them
    ** to add position to pattern, put unpatterned template carriage down in position to be added (must be touching an old position)
       ## turning on the ghost blocks can help in seeing where the old positions are, so you know it must be "touching" a ghost block
    ** to remove position from pattern, put unpatterned template carriage down in position to be removed
    ** use screwdriver while sneaking on patterned template carriage to trigger re-absorption of pattern
 -- added support for newest ComputerCraft API
    ** old one will still work unless I screwed something up
 -- added config option to output messages to the client/server log when drives fail to move
    ** if you know what 'stderr' means, that's where it outputs, so check wherever you have that piped
    ** if you don't know what 'stderr' means, look in your ForgeModLoader-client-0.log
    ** look for the string "*-*-* REDSTONE IN MOTION *-*-*" (in all capitals)
    ** not terribly useful on servers since players won't have access to the server log
    ** bad idea to have this on if you have any carriages anywhere in continuous mode, unless you like your logfiles to take up your entire hard drive
 -- added config option to not show the really long "what does this thing do" tooltip descriptions
    ** will still show carriage decorations and translocator labels in tooltips even with descriptions disabled
 -- added config options to control duration of motion and translocation
    ** minimum 10 ticks each, default 20 (1 second) for motion and 20 * 8 (8 seconds) for translocation
    ** if playing on a server that uses non-default values, make sure yours match or you'll have problems
 -- added config option to disable the items-in-buildcraft-pipes hack if it's giving people trouble
    ** if disabled, trying to use pipes the instant they're placed back into the world after motion will result in spew
    ** if disabled, items travelling through pipes during motion will come back weirdly and stutter at best
 -- added config option to blacklist all blocks that vanilla pistons refuse to move
    ** obsidian
    ** super-hard blocks similar to bedrock
    ** blocks registered as immovable like anvils
    ** (vanilla pistons can't move anything with a tile entity, but we don't blacklist those, because that's a limitation in vanilla, not a design decision)
 -- removed leftover code that was making transparent non-translucent blocks like glass render in a wonky way
 -- un-derped "render in final position during lag" for translocators
 -- worked around crash involving translocators and rendering
 -- worked around crash involving translocators teleporting to chunks not loaded by any players
 -- worked around crash involving carriages trying to render in chunks not loaded by client
 -- removed a little more old random cruft code

2.1.0.1 -> 2.1.0.2
 -- fixed a bug preventing the mod from being loaded on dedicated servers

2.1.0.0 -> 2.1.0.1
 -- fixed crash bug when entities were on carriages being translocated

2.0.0.0 -> 2.1.0.0
 -- translocators now render their labels on their sides
    ** label foreground is 16 icons for 16 dyes
    ** label background indicates "public" , "private to self" , and "private to other"
    ** labels by default should support colourblindness by position and shape of dye icons and pattern of background
    ** THE BACKGROUNDS I MADE REALLY SUCK HOLY CRAP DO THEY EVER SUCK
       ## please, somebody make something that doesn't suck for the three background images
    ** each texture pack could have its own icons/backgrounds, but right now they're just copied/pasted between
       ## if you have a texture pack in the mod (or want to), feel free to make your own if you want
 -- support for ChickenBones / Forge Multipart blocks (non-Immibis microblocks, ChickenBones wireless redstone, etc.) added
    ** credit goes to ChickenBones who actually wrote the code for me
    ** WORKS ON 1.5 AND 1.6 REGARDLESS OF FORGE MULTIPART VERSION
       ## KNOWN ISSUE - block ticks for parts of a multipart tile (such as buttons that have been pressed) are not yet correctly transferred
          %% having parts with scheduled ticks might result in strange behaviour but most of the time will cause no real issues
          %% until this is fixed, don't do things like press buttons encapsulated within multipart tiles or you'll have to break it to reset it
 -- changed/improved internal storage format of decorated carriage blocks and translocators when stored as items in an inventory
    ** eliminates the issue of not being able to use high-index decorations or dyes: now all 4096 blocks and 16 dyes are valid
    ** old-format items must be converted to new-format items
       ## (only when in item form; blocks placed in the world have not been changed)
       ## craft old-format item with screwdriver (screwdriver is not destroyed) to convert item to new format
       ## tooltip on item indicates if it needs conversion
       ## old-format items will be supported for several versions to give people time to convert without stress
 -- added configuration option to allow carriages to move bedrock
 -- added new ComputerCraft commands
    ** intended to increase your code's readability
    ** anchored_move ( 3 ) == move ( 3 , false , true )
    ** check_anchored_move ( 3 ) == move ( 3 , true , true )
    ** unanchored_move ( 3 ) == move ( 3 , false , false )
    ** check_unanchored_move ( 3 ) == move ( 3 , true , false )
 -- strings in addition to indices now accepted for direction in ComputerCraft control
    ** case does not matter: "negy" , "NEGY" , "NegY" , "negY" , etc. are all equivalent
    ** 0 == "down" == "negy"
    ** 1 == "up" == "posy"
    ** 2 == "north" == "negz"
    ** 3 == "south" == "posz"
    ** 4 == "west" == "negx"
    ** 5 == "east" == "posx"
    ** EXAMPLE: peripheral . call ( "left" , "move" , "north" , false , true )
    ** EXAMPLE: peripheral . call ( "left" , "anchored_move" , "posY" )
 -- added config option to control whether animation continues during severe lag that delays the replacement of blocks
    ** if set to false, motion will continue past final position and teleportation will continue to flicker until blocks are actually replaced
       ## looks weird but is a clear indication that things aren't yet done
       ## this is the current behaviour
    ** if set to true, motion will stop at final position and teleportation will stop flickering even if blocks are not yet replaced
       ## doesn't look weird but is more confusing if someone thinks the blocks are there and tries to interact with them but can't
 -- replaced my crappy translocator textures in the Lethosos set by ones actually made by Lethosos
 -- fixed a potential crash in CarriageRenderCache
 -- x/y/z positions of tile-entity records are now updated before creating the tile entities
 -- added more robustness to icon-retrieval functions for when minimap mods do stupid things
 -- overhauled rendering of carriages and carriage drives to improve performance
    ** carriages in-motion still have the issue with rendering transparency which will be fixed soon
 -- prevented carriage blocks from wasting CPU time by receiving unnecessary updateEntity calls

1.2.1.0 -> 2.0.0.0
 -- EXPECT UNDISCOVERED BUGS BY THE PLENTY
 -- BACKUP YOUR WORLDS
 -- DO NOT USE ON STABLE PUBLIC SERVERS UNTIL 2.0 LINE HAS BEEN OUT AND BUG-FREE FOR A WHILE UNLESS YOU LIVE ON THE EDGE
 -- DO NOT HAVE CARRIAGES IN-MOTION WHEN UPDATING
 -- support for Minecraft 1.6.x added
    ** support for Minecraft 1.5.x will be removed when support for Minecraft 1.7.x/2.0.x/whatever added
 -- fixed typo: should be "Carriage Motor", not "Carriage Drive"
 -- cleaned up a bunch of messy/crappy code
 -- added a good bit more robustness against garbage input and other-mod shenanigans
 -- removed legacy conversion of old decorated carriage blocks stored as items
 -- removed legacy conversion of old decorated carriage blocks in the world
 -- moved some things around to reduce redundancy and increase performance slightly
 -- added Carriage Translocator
    ** teleports carriage between locations and dimensions
       ## does not yet teleport entities (like players) with the blocks
    ** can be labelled (like channels)
       ## default label is blank (effectively "channel 0" )
       ## craft translocator with dyes to add to label
          %% each dye can be added once
          %% 16 possible dyes effectively acts as a 16-bit number, making 65,536 possible channels
       ## channels can be made private to the player who placed down the translocator
          %% craft redstone comparator with translocator to make private
          %% will be locked to player name who places the translocator in the world
             == anyone can activate translocator if they can apply a redstone signal to it, but it will teleport only to translocators of the owning player
       ## craft translocator by itself to remove label and privacy flag
    ** requires empty air on the destination side
       ## will not teleport even into grasses or liquids
    ** chunk containing destination translocator must be loaded or Bad Things will probably happen
       ## specifically, it is possible for a carriage to teleport into nothingness and be permanently gone on rare occasions if the destination is not loaded
          %% I cannot yet prevent this
    ** if more than 2 translocators of the same label and privacy status are in the world, no guarantee is made as to which destination is chosen
 -- added ability to deactivate sides of drives (except Carriage Controller)
    ** sneak-activate with screwdriver to activate/deactivate side
    ** a closed side will still accept a redstone signal but will ignore any carriage block touching it
    ** enables the creation of segmented crane arms and other things
    ** carriage drive will still refuse to operate if more than one -active- side is being touched by a carriage block
 -- added temporary check to decorated-carriage and labelled-translocator recipes to dodge new Minecraft flaw (read Known Issues)

1.2.0.1 -> 1.2.1.0
 -- added 16x Dynasty-based texture set by Lethosos
 -- added notes to tooltips that 'platform' and 'support' carriages will be swapping names in the future
 -- fixed bug that the pattern-holding block of a template carriage can overwrite other blocks in the world
 -- template carriages will now drop their pattern carriage blocks when the core template block is broken
 -- fixed bug that caused controllers to not recognize existing carriages when the world or chunk is loaded
 -- return codes overhauled for Carriage Controller
    ** (this needs testing because I don't know ComputerCraft or Lua)
    ** if motion is successful, returns "true" and nothing else (1 value)
    ** if motion is not successful because of obstruction, returns "false", then a plain-English error message, then the X/Y/Z coordinates of the obstruction (5 values)
    ** if motion is not successful because of something other than obstruction, returns "false", then a plain-English error message (2 values)
    ** the only time it will now throw an error and abort the running program is for a syntax error; a valid command that simply can't be carried out will no longer abort the running program

1.2.0.0 -> 1.2.0.1
 -- removed some vestigal server->client data transmission
 -- fixed buildcraft pipes not accepting items immediately after transit
 -- fixed items in buildcraft pipes stuttering/slowing after transit
 -- fixed ComputerCraft synchronization with Minecraft thread of execution to clear a bunch of crashes
 -- continuous-mode cooldown can now be changed back to 0, though the default for new configurations will still be 5
    ** note that with no cooldown, after the first step of transit, many tile entities will no longer render correctly until transit stops
       ## this is cosmetic only, and does not occur if there is a cooldown of at least a couple of ticks unless server->client transmission is super-slow

1.1.1.1 -> 1.2.0.0
 -- as usual, do not have any carriages in-transit when you update or you might be sent into a crash loop
 -- BREAKING CHANGE -- BACKUP YOUR WORLDS
    ** decorated carriages now internally have a different representation
       ## decorated carriages should now stack properly in inventories in all cases
    ** decorated carriages should automatically and safely convert themselves to the new representation in most cases
       ## this is not guaranteed
       ## the safest place for decorated carriages to be is in the world as blocks
       ## if for whatever reason they fail to convert, they will simply lose their decoration but otherwise be fine
       ## all of this depends on me not having screwed up the conversion code
    ** the conversion code will be removed in a future release, at which point all unconverted decorated carriages will become undecorated
 -- unpatterned template carriages will no longer absorb already-patterned template carriages
 -- restructured and reordered the removal, simulation, and replacement of blocks and tile entities to improve compatibility and reduce crashing
 -- accounted for a crash if a carriage's motor or anchored controller is removed while the carriage is in-transit
 -- decorated carriages now render their decoration on all except their top face when in an inventory
 -- removed calls to onBlockAdded post-transit to stop vanilla chests from resetting their orientation
    ** this may cause odd behaviours with mods that depend upon onBlockAdded being called
    ** really, though, mods shouldn't depend upon onBlockAdded being called except when the block is being placed by a player or deployer
 -- redid rendering again
    ** rendering is now 99.999999999% perfect
       ## transparent blocks draw a tiny bit funny, but they draw!
       ## occasionally there will be a slight variance in light level, but again it's super-close to perfect, including light from torches/lamps/redstone
    ** if the carriages are moving super-fast and the client is super laggy, rendering might bug out after the first motion
       ## this is cosmetic, so just don't worry about it: Not much I can realistically do when Minecraft is already bogged down
 -- continuous mode now has a mandatory minimum of 5 ticks of cooldown (1/4 of a second at normal speed)
    ** this is due to rendering and Buildcraft issues, and in case those issues are shared by other mods
    ** this also gives the foolish a chance to escape a carriage in-transit without destroying it in creative mode
    ** WARNING
       ## the issue remains: this is only a workaround
       ## I cannot fix the issue: this is simply how Buildcraft is designed
       ## if you use other means (timers, ComputerCraft, etc.) to move carriages super-quickly, you may trigger the issue and start losing items
 -- eliminated error-log spam about missing continuous-mode textures for carriage controllers
 -- added 16x texture packs (some of which support colourblindness) provided by various authors - check the textures directories for attribution and redistribution
    ** provide feedback if the textures for colourblindness need tweaking for the purpose
    ** if you want your textures included in the mod, license them openly (WTFPL, CC, GPL, public domain, or compatible) and message me on the Technic site
 -- recipes now use the Forge ore dictionary for wooden sticks and for dyes

1.1.1.0 -> 1.1.1.1
 -- fixed bug preventing crafting decorated carriages in SMP
 -- (hopefully) fixed bug sometimes causing TE redstone conduits to lose their connection state
 -- (hopefully) fixed bug causing stack overflows relating to packets when attempting to render red wire (and other things)
 -- ** these fixes should stop the majority of the crashing, but there are further fixes I've discovered and begun work on

1.1.0.0 -> 1.1.1.0
 -- omni-wrench support implemented
 -- in-transit rendering now uses a display list for a massive performance boost with large carriages
 -- completely refactored the rendering of in-transit carriages
    ** every single block from vanilla and every single mod in existence will now render
    ** some are going to be a little imperfect, like enchantment tables will always render with thier books closed
    ** lighting is still a bit off, but is much better, and now actually uses ambient occlusion if enabled in the Minecraft config
    ** some mod items look really goofy
       ## buildcraft pipes have the correct shape but a missing texture
       ## thermal expansion conduits, cells, and tesseracts render their constituent fluids but not their actual shells
       ## (and plenty more oddities, I'm sure)
       ## never expect this to be perfect: I will continually work to make it better, but at some point, it's "good enough" since it's cosmetic
       ## any time you encounter rendering issues, look in your Forge client log file for exceptions; If you see any with "JAKJ" in them, report them to me
 -- fire now renders properly in-transit
 -- improved compatibility with the mod "Big Reactors" and possibly some others
 -- EXPERIMENTAL UNTESTED support for MCPC+ added
    ** crashing has been removed on error; instead, the error will be printed to the log file and the process will continue
    ** this prevents you from losing your entire carriage and having a server crash on motion
    ** if errors occur, things like buttons and pressure plates that are pressed at the time of motion will stay pressed forever; break and re-place
    ** check your log for errors and REPORT THEM to me
 -- invisible unbreakable placeholder blocks will no longer automatically decay very slowly over time
    ** instead, use a screwdriver on them to immediately remove them
    ** other than being a nuisance, they don't do any harm, so don't worry if you can't find them right away
    ** the only circumstance they can ever be left behind is if there is a crash while a carriage is in motion and the carriage did not save
       ## hopefully that won't ever happen!
 -- in-transit carriages will now render no matter which way the player is facing

1.0.1.1 -> 1.1.0.0
 -- includes MAJOR BREAKING CHANGES so read carefully to see if any apply to you
 -- also, since major portions of the code have changed, the potential for new and undiscovered bugs is high, so BACKUP YOUR WORLDS
 -- *************
 -- BREAK ALL CARRIAGE CONTROLLERS BEFORE YOU UPDATE OR YOU WILL CRASH
 -- (having them in your inventory as items is fine)
 -- *************
 -- make sure you do not have any carriages in-transit when opening the world for the first time with the updated mod
 -- *************
 -- configuration file has changed
 -- before running the updated mod, you should delete all lines from your config file except the block and item IDs
 -- *************
 -- completely refactored the code dealing with the formation of carriages
 -- railcraft hidden/tracking blocks should now be handled, so in theory you don't need to disable that block anymore (testing needed)
 -- structure carriages now accept drives on any edge or corner instead of just on the corner
 -- generalized in-transit renderer so all blocks from all mods without tile entities should render without needing to be explicitly handled
 -- improved capturing of entities at the start of carriage motion
    ** should now almost never grab an entity unless it actually is "on" the carriage in some way
 -- carriage controller now acts as both motor and engine, meaning it can either stay put or move with the carriage
    ** new command is "move <direction> <simulation-flag> <anchoring-flag>"
    ** anchoring-flag: true = stay put, false = move with carriage
    ** if the controller moves, computercraft will still act as if it is there, so it won't be able to move it again
       ## you would need another computer at the new position in that case
    ** controller now includes error messages at each step of the process
       ## "false" is no longer a possible return code: either an error will be printed or "true" will be returned
 -- added configuration option to control whether carriage can move through liquids or is blocked by them
 -- added configuration option to control whether carriage can move through fragile blocks (like tall grass, wheat, and snowcover) or is blocked by them

1.0.1.0 -> 1.0.1.1
 -- fixed a crash where I forgot to clear obsolescent tile entities when clearing blocks prior to motion
 -- fixed a crash related to Silk Touch because Forge does something stupid
 -- removed all reflection against vanilla classes, which may or may not provide Bukkit compatibility
 -- added configuration options to control which types of entities are grabbed during motion
    ** note that, like everything else in the mod, these are server-side, so in singleplayer they work normally, but in multiplayer they apply to all players at once

1.0.0.0 -> 1.0.1.0
 -- fixed a crash when re-loading a world that was saved with a carriage in-transit that had entities moving with it
    ** when re-loading such a world, the entities will no longer be locked to the carriage for that particular motion
    ** this also means you can escape a continuous-mode carriage simply by logging out and in again
 -- the invisible placeholder blocks are no longer connected to a creative tab
 -- the invisible placeholder blocks will now (eventually) delete themselves if they are stranded in the world by a crash
 -- added a config option to set the number of ticks (default 0) a continuous-mode drive will wait between motions

0.2.1.0 -> 1.0.0.0
 -- enchantment tables are now rendered in-transit
 -- signs (both on posts and on walls) are rendered in-transit
 -- carriage drives that are correctly configured for motion and are being signalled by redstone but fail to actually move the carriage will now keep attempting to move the carriage continuously as long as they remain correctly configured for motion and are being signalled by redstone
 -- ** this allows the creation of staggered carriages, where one activates the next which activates the next, multiple carriage types following each other or triggering each other in sequence
 -- ** for example, a caterpillar drive for moving a house over a long distance, which is a structure carriage being driven by an engine which is being signalled by a frame carriage carrying a redstone block and being driven by an engine in continuous mode
 -- ** this also means that drives will correctly attempt to move the carriage even when placed into an extant configuration
 -- carriage drives will now check for updates when being switched into or out of continuous mode
 -- fixed carriages grabbing entities that were near but not actually on the carriage on the -X and -Z sides
 -- added in-transit placeholder blocks so that sand/gravel/water/lava/etc. don't fall through the roof of an in-transit carriage
 -- ** blocks will fall through the carriage only if, after the carriage stops moving, there won't be anything supporting those blocks
 -- ** in that case, things will fall through the carriage immediately, even though visually the carriage is still moving; this is not a bug
 -- added template carriages
 -- ** place down template carriages in any contiguous shape whatsoever
 -- ** use the screwdriver on one of the carriages: that carriage will absorb all the rest, but remember their locations
 -- ** the remaining template carriage (which now has closed sides) will move any blocks in the pattern it has absorbed
 -- ** if the patterned template carriage is broken, it will lose its pattern, so you must assemble it in-place
 -- ** only the spots in the world represented by the pattern will be moved, and nothing else anywhere
 -- ** this is the ultimate in precise design control: decide exactly what blocks where will be moved
 -- ** this is not the ultimate always-use-this carriage, though, because all but one of the blocks are lost every time a pattern is established, it cannot be safely moved except by carriage drives, there is no visual indication of the pattern after it has been established, and a template carriage must be used in every single block position to be recorded (a full volume)

0.2.0.0 -> 0.2.1.0
 -- fixed a potential crash when the world instructs a block to update itself
 -- prevented usage of screwdriver while sneaking on structure carriage from causing the wrong behaviour
 -- added ComputerCraft support in the form of a carriage motor that responds to commands instead of redstone signals
 -- ** interface with it using the ComputerCraft peripheral api
 -- ** command is "move <direction> <simulation flag>"
 -- ** "<simulation flag>" is either "true" or "false"
 -- ** ** "true" means just say whether the carriage could move; "false" means actually move it
 -- ** "<direction>" is "0", "1", "2", "3", "4", or "5"
 -- ** ** 0 is up , 1 is down, 2 is north (-Z), 3 is south (+Z), 4 is west (-X), 5 is east (+X)

0.1.0.0 -> 0.2.0.0
 -- entities being moved by carriages should behave a bit better when there is a lot of server-to-client lag
 -- carriage blocks can now be disguised to look like other blocks
 -- ** craft a carriage block with any regular block to set it as the disguise
 -- ** it will let you craft things that look silly, such as with torches, so test first before throwing away a stack of them
 -- ** craft a disguised carriage block by itself to remove the disguise
 -- ** only closed sides will be disguised
 -- ** being disguised will not change the function of the carriage block in any way
 -- ** most of the time, disguised carriage blocks will not stack; this is a vanilla issue and cannot be fixed without a coremod
 -- all vanilla blocks are now rendered in-transit EXCEPT the following:
 -- *) regular, locked, trapped, and ender chests
 -- *) regular signs and signs on walls
 -- *) enchantment tables
 -- *) ender portals and frames of ender portals
 -- *) beacons
 -- *) mob/player skulls
 -- mcmod.info now present
 -- suddenly remembered the need to keep the in-mod version string up-to-date

0.0.2.0 -> 0.1.0.0
 -- fixed a crash on dedicated servers relating to packet classes
 -- all entities (e.g., players, animals, monsters, minecarts, items on the ground) now move with the carriage

0.0.1.1 -> 0.0.2.0
 -- Blocks that have pending updates (such as buttons that were pressed) will now receive those updates after being moved. The blocks are in suspended animation during the motion, so the time remaining before the update will not decrease during transit (meaning that if it had 0.5 seconds before being updated before, once it finishes being moved, it will still have 0.5 seconds before being updated).

0.0.1.0 -> 0.0.1.1
 -- changed recipes back to giving only 1 item each (an increase in wood required)
 -- changed carriages to prefer being broken with axe instead of pickaxe
 -- improved shading for in-transit rendering even more
 -- blocks now do not drop in creative mode

0.0.0.0 -> 0.0.1.0
 -- fixed a crash in WorldUtil . SneakySetBlock
 -- drives now indicate when they are active
 -- fixed some crashes related to missing tile entities
 -- improved shading during rendering of in-transit blocks
 -- added in-transit rendering for the following blocks
 -- (note: transparency (like for ice) will not be implemented)
 -- *) carriages
 -- *) carriage drives
 -- *) stone
 -- *) dirt
 -- *) cobblestone
 -- *) planks
 -- *) sand
 -- *) gravel
 -- *) gold ore
 -- *) iron ore
 -- *) coal ore
 -- *) logs
 -- *) sponge
 -- *) glass
 -- *) lapis ore
 -- *) lapis block
 -- *) dispenser
 -- *) sandstone
 -- *) note block
 -- *) wool
 -- *) gold block
 -- *) iron block
 -- *) brick block
 -- *) TNT
 -- *) bookshelf
 -- *) mossy cobblestone
 -- *) obsidian
 -- *) diamond ore
 -- *) diamond block
 -- *) crafting table
 -- *) farmland
 -- *) idle/burning furnaces
 -- *) redstone ore
 -- *) ice (no transparency)
 -- *) snow block
 -- *) clay block
 -- *) jukebox
 -- *) pumpkin (without stem)
 -- *) netherrack
 -- *) soul sand
 -- *) glowstone
 -- *) jack 'o th' lantern
 -- *) stone brick
 -- *) melon (without stem)
 -- *) nether brick
 -- *) end stone
 -- *) unlit/lit redstone lamps
 -- *) wooden double-slabs
 -- *) emerald ore
 -- *) emerald block
 -- *) command block
 -- *) redstone block
 -- *) nether quartz ore
 -- *) nether quartz block
 -- *) regular torches